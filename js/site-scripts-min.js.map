{"version":3,"sources":["site-scripts.js"],"names":["AOS","init","disable","startEvent","initClassName","animatedClassName","useClassNames","disableMutationObserver","debounceDelay","throttleDelay","offset","delay","duration","easing","once","mirror","global","factory","define","amd","exports","mod","this","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","Object","defineProperty","value","hasPassiveEvents","window","passiveTestOptions","passive","addEventListener","removeEventListener","isIosDevice","navigator","platform","test","locks","documentListenerAdded","initialClientY","previousBodyOverflowSetting","previousBodyPaddingRight","allowTouchMove","el","some","lock","options","preventDefault","rawEvent","e","event","target","touches","setOverflowHidden","setTimeout","undefined","_reserveScrollBarGap","reserveScrollBarGap","scrollBarGap","innerWidth","document","documentElement","clientWidth","body","style","paddingRight","overflow","restoreOverflowSetting","isTargetElementTotallyScrolled","targetElement","scrollHeight","scrollTop","clientHeight","handleScroll","clientY","targetTouches","stopPropagation","disableBodyScroll","console","error","concat","ontouchstart","ontouchmove","_lock","clearAllBodyScrollLocks","forEach","enableBodyScroll","filter"],"mappings":"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","sourcesContent":["( function() {\n\n\t// AOS\n\tAOS.init({\n\t\t// Global settings:\n\t\tdisable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function\n\t\tstartEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on\n\t\tinitClassName: 'aos-init', // class applied after initialization\n\t\tanimatedClassName: 'aos-animate', // class applied on animation\n\t\tuseClassNames: false, // if true, will add content of `data-aos` as classes on scroll\n\t\tdisableMutationObserver: false, // disables automatic mutations' detections (advanced)\n\t\tdebounceDelay: 50, // the delay on debounce used while resizing window (advanced)\n\t\tthrottleDelay: 99, // the delay on throttle used while scrolling the page (advanced)\n\t\t\n\t\t\n\t\t// Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\n\t\toffset: 120, // offset (in px) from the original trigger point\n\t\tdelay: 0, // values from 0 to 3000, with step 50ms\n\t\tduration: 400, // values from 0 to 3000, with step 50ms\n\t\teasing: 'ease', // default easing for AOS animations\n\t\tonce: true, // whether animation should happen only once - while scrolling down\n\t\tmirror: false, // whether elements should animate out while scrolling past them\n\t\t// anchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation\n\t});\n\t\n\t\n\t// Body Scroll Lock (for mobile menu)\n\t(function (global, factory) {\n\t  if (typeof define === \"function\" && define.amd) {\n\t    define(['exports'], factory);\n\t  } else if (typeof exports !== \"undefined\") {\n\t    factory(exports);\n\t  } else {\n\t    var mod = {\n\t      exports: {}\n\t    };\n\t    factory(mod.exports);\n\t    // global.bodyScrollLock = mod.exports;\n\t  }\n\t})(this, function (exports) {\n\t  'use strict';\n\t\n\t  Object.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t  });\n\t\n\t  function _toConsumableArray(arr) {\n\t    if (Array.isArray(arr)) {\n\t      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n\t        arr2[i] = arr[i];\n\t      }\n\t\n\t      return arr2;\n\t    } else {\n\t      return Array.from(arr);\n\t    }\n\t  }\n\t\n\t  // Older browsers don't support event options, feature detect it.\n\t\n\t  // Adopted and modified solution from Bohdan Didukh (2017)\n\t  // https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\t\n\t  var hasPassiveEvents = false;\n\t  if (typeof window !== 'undefined') {\n\t    var passiveTestOptions = {\n\t      get passive() {\n\t        hasPassiveEvents = true;\n\t        return undefined;\n\t      }\n\t    };\n\t    window.addEventListener('testPassive', null, passiveTestOptions);\n\t    window.removeEventListener('testPassive', null, passiveTestOptions);\n\t  }\n\t\n\t  var isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && /iP(ad|hone|od)/.test(window.navigator.platform);\n\t\n\t\n\t  var locks = [];\n\t  var documentListenerAdded = false;\n\t  var initialClientY = -1;\n\t  var previousBodyOverflowSetting = void 0;\n\t  var previousBodyPaddingRight = void 0;\n\t\n\t  // returns true if `el` should be allowed to receive touchmove events\n\t  var allowTouchMove = function allowTouchMove(el) {\n\t    return locks.some(function (lock) {\n\t      if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n\t        return true;\n\t      }\n\t\n\t      return false;\n\t    });\n\t  };\n\t\n\t  var preventDefault = function preventDefault(rawEvent) {\n\t    var e = rawEvent || window.event;\n\t\n\t    // For the case whereby consumers adds a touchmove event listener to document.\n\t    // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n\t    // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n\t    // the touchmove event on document will break.\n\t    if (allowTouchMove(e.target)) {\n\t      return true;\n\t    }\n\t\n\t    // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom)\n\t    if (e.touches.length > 1) return true;\n\t\n\t    if (e.preventDefault) e.preventDefault();\n\t\n\t    return false;\n\t  };\n\t\n\t  var setOverflowHidden = function setOverflowHidden(options) {\n\t    // Setting overflow on body/documentElement synchronously in Desktop Safari slows down\n\t    // the responsiveness for some reason. Setting within a setTimeout fixes this.\n\t    setTimeout(function () {\n\t      // If previousBodyPaddingRight is already set, don't set it again.\n\t      if (previousBodyPaddingRight === undefined) {\n\t        var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n\t        var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\t\n\t        if (_reserveScrollBarGap && scrollBarGap > 0) {\n\t          previousBodyPaddingRight = document.body.style.paddingRight;\n\t          document.body.style.paddingRight = scrollBarGap + 'px';\n\t        }\n\t      }\n\t\n\t      // If previousBodyOverflowSetting is already set, don't set it again.\n\t      if (previousBodyOverflowSetting === undefined) {\n\t        previousBodyOverflowSetting = document.body.style.overflow;\n\t        document.body.style.overflow = 'hidden';\n\t      }\n\t    });\n\t  };\n\t\n\t  var restoreOverflowSetting = function restoreOverflowSetting() {\n\t    // Setting overflow on body/documentElement synchronously in Desktop Safari slows down\n\t    // the responsiveness for some reason. Setting within a setTimeout fixes this.\n\t    setTimeout(function () {\n\t      if (previousBodyPaddingRight !== undefined) {\n\t        document.body.style.paddingRight = previousBodyPaddingRight;\n\t\n\t        // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n\t        // can be set again.\n\t        previousBodyPaddingRight = undefined;\n\t      }\n\t\n\t      if (previousBodyOverflowSetting !== undefined) {\n\t        document.body.style.overflow = previousBodyOverflowSetting;\n\t\n\t        // Restore previousBodyOverflowSetting to undefined\n\t        // so setOverflowHidden knows it can be set again.\n\t        previousBodyOverflowSetting = undefined;\n\t      }\n\t    });\n\t  };\n\t\n\t  // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n\t  var isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n\t    return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n\t  };\n\t\n\t  var handleScroll = function handleScroll(event, targetElement) {\n\t    var clientY = event.targetTouches[0].clientY - initialClientY;\n\t\n\t    if (allowTouchMove(event.target)) {\n\t      return false;\n\t    }\n\t\n\t    if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n\t      // element is at the top of its scroll\n\t      return preventDefault(event);\n\t    }\n\t\n\t    if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n\t      // element is at the top of its scroll\n\t      return preventDefault(event);\n\t    }\n\t\n\t    event.stopPropagation();\n\t    return true;\n\t  };\n\t\n\t  var disableBodyScroll = exports.disableBodyScroll = function disableBodyScroll(targetElement, options) {\n\t    if (isIosDevice) {\n\t      // targetElement must be provided, and disableBodyScroll must not have been\n\t      // called on this targetElement before.\n\t      if (!targetElement) {\n\t        // eslint-disable-next-line no-console\n\t        console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n\t        return;\n\t      }\n\t\n\t      if (targetElement && !locks.some(function (lock) {\n\t        return lock.targetElement === targetElement;\n\t      })) {\n\t        var lock = {\n\t          targetElement: targetElement,\n\t          options: options || {}\n\t        };\n\t\n\t        locks = [].concat(_toConsumableArray(locks), [lock]);\n\t\n\t        targetElement.ontouchstart = function (event) {\n\t          if (event.targetTouches.length === 1) {\n\t            // detect single touch\n\t            initialClientY = event.targetTouches[0].clientY;\n\t          }\n\t        };\n\t        targetElement.ontouchmove = function (event) {\n\t          if (event.targetTouches.length === 1) {\n\t            // detect single touch\n\t            handleScroll(event, targetElement);\n\t          }\n\t        };\n\t\n\t        if (!documentListenerAdded) {\n\t          document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n\t          documentListenerAdded = true;\n\t        }\n\t      }\n\t    } else {\n\t      setOverflowHidden(options);\n\t      var _lock = {\n\t        targetElement: targetElement,\n\t        options: options || {}\n\t      };\n\t\n\t      locks = [].concat(_toConsumableArray(locks), [_lock]);\n\t    }\n\t  };\n\t\n\t  var clearAllBodyScrollLocks = exports.clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n\t    if (isIosDevice) {\n\t      // Clear all locks ontouchstart/ontouchmove handlers, and the references\n\t      locks.forEach(function (lock) {\n\t        lock.targetElement.ontouchstart = null;\n\t        lock.targetElement.ontouchmove = null;\n\t      });\n\t\n\t      if (documentListenerAdded) {\n\t        document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n\t        documentListenerAdded = false;\n\t      }\n\t\n\t      locks = [];\n\t\n\t      // Reset initial clientY\n\t      initialClientY = -1;\n\t    } else {\n\t      restoreOverflowSetting();\n\t      locks = [];\n\t    }\n\t  };\n\t\n\t  var enableBodyScroll = exports.enableBodyScroll = function enableBodyScroll(targetElement) {\n\t    if (isIosDevice) {\n\t      if (!targetElement) {\n\t        // eslint-disable-next-line no-console\n\t        console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n\t        return;\n\t      }\n\t\n\t      targetElement.ontouchstart = null;\n\t      targetElement.ontouchmove = null;\n\t\n\t      locks = locks.filter(function (lock) {\n\t        return lock.targetElement !== targetElement;\n\t      });\n\t\n\t      if (documentListenerAdded && locks.length === 0) {\n\t        document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n\t\n\t        documentListenerAdded = false;\n\t      }\n\t    } else if (locks.length === 1 && locks[0].targetElement === targetElement) {\n\t      restoreOverflowSetting();\n\t\n\t      locks = [];\n\t    } else {\n\t      locks = locks.filter(function (lock) {\n\t        return lock.targetElement !== targetElement;\n\t      });\n\t    }\n\t  };\n\t});\n\n\n\n} )();"]}